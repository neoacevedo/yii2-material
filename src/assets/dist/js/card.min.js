class MdOutlinedCard extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n            <style>\n                :host {\n                    box-sizing: border-box;\n                    display: flex;\n                    flex-direction: column;\n                    position: relative;\n                    z-index: 0;\n                    border-radius: var(--md-outlined-card-container-shape, var(--md-sys-shape-corner-medium, 12px));\n                    border: var(--md-outlined-card-outline-width, 1px) solid var(--md-outlined-card-outline-color);\n                    --md-elevation-level: var(--md-outlined-card-container-elevation);\n                }\n\n                md-elevation {\n                    transition-duration: 280ms;\n                    transition-timing-function: cubic-bezier(0.2, 0, 0, 1);\n                }\n\n                md-elevation,\n                .background,\n                .outline {\n                    border-radius: inherit;\n                    inset: 0;\n                    pointer-events: none;\n                    position: absolute;\n                }\n\n                .background {\n                    background: var(--md-outlined-card-container-color);\n                    z-index: -1;\n                }\n\n                .outline {\n                    border: 1px solid transparent;\n                    z-index: 1;\n                }\n\n                slot {\n                    border-radius: inherit;\n                }\n\n                ::slotted(div[slot="actions"]) {\n                    display: flex;\n                    flex-direction: row;\n                    align-items: center;\n                    box-sizing: border-box;\n                }\n            </style>\n            <md-elevation part="elevation"></md-elevation>\n            <div class="background"></div>\n            <slot></slot>\n            <slot name="actions"></slot>\n            <div class="outline"></div>\n        '}}class MdFilledCard extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n            <style>\n                :host {\n                    box-sizing: border-box;\n                    display: flex;\n                    flex-direction: column;\n                    position: relative;\n                    z-index: 0;\n                    border-radius: var(--md-filled-card-container-shape, var(--md-sys-shape-corner-medium, 12px));\n                    --md-elevation-level: var(--md-filled-card-container-elevation);\n                }\n\n                md-elevation {\n                    transition-duration: 280ms;\n                    transition-timing-function: cubic-bezier(0.2, 0, 0, 1);\n                }\n\n                md-elevation,\n                .background,\n                .outline {\n                    border-radius: inherit;\n                    inset: 0;\n                    pointer-events: none;\n                    position: absolute;\n                }\n\n                .background {\n                    background: var(--md-filled-card-container-color);\n                    z-index: -1;\n                }\n\n                .outline {\n                    border: 1px solid transparent;\n                    z-index: 1;\n                }\n\n                slot {\n                    border-radius: inherit;\n                }\n\n                ::slotted(div[slot="actions"]) {\n                    display: flex;\n                    flex-direction: row;\n                    align-items: center;\n                    box-sizing: border-box;\n                }\n            </style>\n            <md-elevation part="elevation"></md-elevation>\n            <div class="background"></div>\n            <slot></slot>\n            <slot name="actions"></slot>\n            <div class="outline"></div>\n        '}}class MdElevatedCard extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n            <style>\n                :host {\n                    box-sizing: border-box;\n                    display: flex;\n                    flex-direction: column;\n                    position: relative;\n                    z-index: 0;\n                    border-radius: var(--md-elevated-card-container-shape, var(--md-sys-shape-corner-medium, 12px));\n                    box-shadow: 0px 1px 3px 0px var(--md-elevated-card-container-shadow-color);\n                    --md-elevation-level: var(--md-elevated-card-container-elevation);\n                }\n\n                md-elevation {\n                    transition-duration: 280ms;\n                    transition-timing-function: cubic-bezier(0.2, 0, 0, 1);\n                }\n\n                md-elevation,\n                .background,\n                .outline {\n                    border-radius: inherit;\n                    inset: 0;\n                    pointer-events: none;\n                    position: absolute;\n                }\n\n                .background {\n                    background: var(--md-elevated-card-container-color);\n                    z-index: -1;\n                }\n\n                .outline {\n                    border: 1px solid transparent;\n                    z-index: 1;\n                }\n\n                slot {\n                    border-radius: inherit;\n                }\n\n                ::slotted(div[slot="actions"]) {\n                    display: flex;\n                    flex-direction: row;\n                    align-items: center;\n                    box-sizing: border-box;\n                    padding: 16px;\n                }\n            </style>\n            <md-elevation part="elevation"></md-elevation>\n            <div class="background"></div>\n            <slot></slot>\n            <slot name="actions"></slot>\n            <div class="outline"></div>\n        '}}customElements.define("md-outlined-card",MdOutlinedCard),customElements.define("md-filled-card",MdFilledCard),customElements.define("md-elevated-card",MdElevatedCard);