/**
 * @preserve
 * @copyright Copyright (c) 2024 neoacevedo
 * @subpackage yii2-material
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * @endpreserve
 */
class Snackbar extends HTMLElement{constructor(){super(),this._shadowRoot=this.attachShadow({mode:"open"}),this._showCloseIcon=this.getAttribute("show-close-icon")??!1,this._duration=this.getAttribute("duration")??3,this._shadowRoot.innerHTML='\n            <style>\n                :host {\n                    font-family: \'Roboto\';\n                    font-size: 14px;\n                    font-weight: 500;\n                    --md-sys-color-primary: #333;\n                }\n\n                .snackbar {\n                    display: none;\n                    position: fixed;\n                    bottom: 20px;\n                    align-content: center;\n                    left: 50%;\n                    transform: translateX(-50%);\n                    background-color: #333;\n                    color: white;\n                    border-radius: 4px;\n                    min-width: 288px;\n                    min-height: 48px;\n                    max-height: 68px;\n                    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.26);\n                    transition: visibility 0s, opacity 0.5s linear;\n                }\n\n                .snackbar.show {\n                    display: block;\n                }\n\n                .content {\n                    display: flex;\n                }\n\n                .actions {\n                    display: flex;\n                    align-items: center;\n                    margin-right: 8px;\n                }\n\n                ::slotted(div[slot="supporting-text"]) {\n                    display: flex;\n                    flex-grow: 1;\n                    padding: 14px 16px;\n                    line-height: 1.25rem;\n                    font-weight: 400;\n                }\n            </style>\n            <div class="snackbar" id="snackbar">\n                <div class="content">\n                    <slot name="supporting-text"></slot>\n                    <div id="actions" class="actions">\n                        <slot name="action"></slot>\n                    </div>\n                </div>\n            </div>\n        ',this._snackbar=this._shadowRoot.getElementById("snackbar"),this._actions=this._shadowRoot.getElementById("actions")}connectedCallback(){"true"==this._showCloseIcon&&(this._actions.innerHTML+='<md-filled-icon-button id="closeButton"><md-icon>close</md-icon></md-filled-icon-button>',this._closeButton=this._shadowRoot.getElementById("closeButton"),this._closeButton.addEventListener("click",(()=>{this._snackbar.classList.remove("show"),setTimeout((()=>{this._snackbar.style.display="none"}),500)}))),this.showSnackbar()}attributeChangedCallback(t,n,s){if("behavior"===t){"fixed"===this.getAttribute("behavior")?(this._snackbar.style.position="fixed",this._snackbar.style.bottom="20px",this._snackbar.style.left="50%",this._snackbar.style.transform="translateX(-50%)"):(this._snackbar.style.position="absolute",this._snackbar.style.bottom="20px",this._snackbar.style.left="50%",this._snackbar.style.transform="translateX(-50%)")}}showSnackbar(){this._snackbar.classList.add("show"),setTimeout((()=>{this._snackbar.classList.remove("show"),setTimeout((()=>{this._snackbar.style.display="none"}),500)}),1e3*this._duration)}}customElements.define("md-snackbar",Snackbar);